pipeline {
    agent {
        label 'TEST_APP1_AWS'
    }
    environment {
        TF_DIR = "terraform"
        ANSIBLE_DIR = "ansible"
        SSH_KEY = credentials('ec2-ssh-key1')         // Jenkins File credential (PEM file)
        GIT_TOKEN = credentials('github-access')     // GitHub token from Jenkins credentials
    }
    stages {
        stage('Terraform Init & Apply') {
            steps {
                script {
                    try {
                        sh "sudo docker run --rm -v \$PWD/${TF_DIR}:/workspace -w /workspace hashicorp/terraform:1.7.5 init"
                        sh "sudo docker run --rm -v \$PWD/${TF_DIR}:/workspace -w /workspace hashicorp/terraform:1.7.5 apply -auto-approve"
                        env.INSTANCE_CREATED = "true"
                    } catch (err) {
                        echo ":x: Terraform apply failed: ${err}"
                        error("Stopping pipeline.")
                    }
                }
            }
        }
        stage('Generate Inventory') {
            steps {
                script {
                    def ip = sh(
                script: "sudo docker run --rm -v \$PWD/${TF_DIR}:/workspace -w /workspace hashicorp/terraform:1.7.5 output -raw instance_ip",
                returnStdout: true
            ).trim()
            writeFile file: "${ANSIBLE_DIR}/inventory.ini", text: """[app]
${ip} ansible_user=ubuntu ansible_ssh_private_key_file=/workspace/${SSH_KEY} ansible_ssh_common_args='-o StrictHostKeyChecking=no'
"""
            echo ":white_check_mark: Inventory generated with IP: ${ip}"
                }
            }
        }
        stage('Provision & Deploy (Ansible)') {
            steps {
                script {
                    try {
                        sh """
                        sudo docker run --rm \
                          -v $PWD:/workspace \
                          -v ${SSH_KEY}:/workspace/${SSH_KEY} \
                          -e ANSIBLE_GIT_TOKEN=${GIT_TOKEN} \
                          willhallonline/ansible:latest \
                          ansible-playbook -vvv \
                            -i /workspace/${ANSIBLE_DIR}/inventory.py \
                            /workspace/${ANSIBLE_DIR}/site.yml \
                            -e "ansible_user=ubuntu" \
                            -e "ansible_ssh_private_key_file=/workspace/${SSH_KEY}" \
                            -e "ansible_ssh_common_args='-p 9211 -o StrictHostKeyChecking=no'"
                        """
                    } catch (err) {
                        echo ":x: Ansible failed: ${err}"
                        error("Stopping pipeline.")
                    }
                }
            }
        }
    }
    post {
        failure {
            script {
                if (env.INSTANCE_CREATED == "true") {
                    echo ":broom: Cleaning up EC2 instance..."
                    sh "sudo docker run --rm -v \$PWD/${TF_DIR}:/workspace -w /workspace hashicorp/terraform:1.7.5 destroy -auto-approve || true"
                }
            }
        }
        success {
            echo ":white_check_mark: Deployment pipeline completed successfully."
        }
    }
}
